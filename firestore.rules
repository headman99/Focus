rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
  //Veirifica se l'utente attivo in questo momento è quello passato come argomento
  function checkUserIdDoc(idDoc){
		return (get(/databases/$(database)/documents/users/$(idDoc)).data.id == request.auth.token.email
    	&& request.auth.uid!=null
    )
}
    match /users/{uid} {
      allow read : if request.auth.uid!=null;
      allow write: if checkUserIdDoc(uid);
    }
    
    match /notifications/{notId}/{document=**}{
    	allow read: if checkUserIdDoc(notId);
      
      match /userRequests/{requestId}{
      //verifica se il documento passato come argomento è una notifica inviata
      function isSentDocument(idDoc){
        return
          request.resource.data.type=="sent" 
          && request.resource.data.state=='pending'
          && request.resource.data.receiver == get(/databases/$(database)/documents/users/$(idDoc)).data.username
          && request.resource.data.sender == notId;
      }

      //verifica se il documento passato come argomento è una notifica ricevuta
      function isReceivedDocument(idDoc){
        return request.resource.data.sender == get(/databases/$(database)/documents/users/$(idDoc)).data.username
        	&& request.resource.data.type == 'received'
          && request.resource.data.requestRef == /notifications/$(idDoc)/userRequests/$(notId)
          && request.resource.data.keys().hasOnly(['type', 'id', 'sender', 'requestRef','createdAt','read']);
      }

      	allow create: if (
          checkUserIdDoc(requestId) && isReceivedDocument(requestId) && (!exists(/databases/$(database)/documents/notifications/$(requestId)/userRequests/$(notId)))
        ) || (
          checkUserIdDoc(notId) && isSentDocument(requestId) && (!exists(/databases/$(database)/documents/notifications/$(notId)/userRequests/$(requestId)))
        )

        allow update: if (
          checkUserIdDoc(requestId)
          && isSentDocument(requestId)
          && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['state'])
          )  || (
        	checkUserIdDoc(notId)
          && isReceivedDocument(requestId)
          && request.resource.data.read==false
          && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read'])
        );
  
        allow delete: if checkUserIdDoc(notId)
      }
    }
  }
}